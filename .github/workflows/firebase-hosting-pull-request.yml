# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR
"on": pull_request
jobs:
  build_and_preview:
    if: "${{ github.event.pull_request.head.repo.full_name == github.repository }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: yarn && yarn build
        env:
          REACT_APP_FB_API_KEY: "${{ secrets.REACT_APP_FB_API_KEY }}"
          REACT_APP_FB_APP_ID: "${{ secrets.REACT_APP_FB_APP_ID }}"
          REACT_APP_FB_DATABASE_URL: "${{ secrets.REACT_APP_FB_DATABASE_URL }}"
          REACT_APP_FB_AUTH_DOMAIN: "${{ secrets.REACT_APP_FB_AUTH_DOMAIN }}"
      - name: Read the bundle stats and put it on a comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: stats-comment.html
          recreate: true
      - uses: FirebaseExtended/action-hosting-deploy@v0
        id: fb_deploy
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_TIME_TRACKER_A0213 }}"
          projectId: time-tracker-a0213
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v8
        id: lighthouse_audit
        with:
          urls: |
            ${{ steps.fb_deploy.outputs.details_url }}
            ${{ steps.fb_deploy.outputs.details_url }}/login/
          # budgetPath: ./budget.json
          uploadArtifacts: true
          temporaryPublicStorage: true
      - name: Format lighthouse score
        id: test_format_lighthouse_score
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const script = require('./.github/workflows/format-lighthouse.js')
            await script({context, core})
      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}
            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'
            const comment = [
                `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
                '| Category | Score |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} |`,
                ' ',
                `*Lighthouse ran on [${ Object.keys(links)[0] }](${Object.keys(links)[0]})*`,
                `${new Date().toLocaleString()}`
            ].join('\n')
            core.setOutput("comment", comment);
      - name: Add comment to PR
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}
